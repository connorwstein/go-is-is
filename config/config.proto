// From go-is-is, run protoc -I config/ --go_out=plugins=grpc:config/ config/config.proto
// This will define the gRPC service to send in config to the IS-IS node
// Note that the gRPC plugin for the protoc compiler is what actually generates
// the client/server code
syntax = "proto3";
package config;

service Configure {
    rpc ConfigureSystemID (SystemIDRequest) returns (SystemIDReply) {}
    // Tell the IS-IS system which interfaces is has available
    // And configure the IP addresses on that interface 
    //rpc ConfigureIntf (IntfRequest) returns (IntfResponse) {}
}

service State {
    // Could also support streaming updates out this system ?
    rpc GetState (StateRequest) returns (StateReply) {}
}

message StateRequest {
    string dummy = 1;
}

message StateReply {
    string adj = 1;
}

//message IntfRequest {
 //   string intf // eth0, eth1 etc.
  //  string prefix // Use CIDR format
//}

//message IntfResponse {
 //   string intf_config_response
//}

// The request message containing the system id to use
message SystemIDRequest {
    string sid= 1;
}

// The response message containing the greetings
message SystemIDReply {
    string message = 1;
}
